/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 scene.gltf -t 
Author: driggleman (https://sketchfab.com/driggleman)
License: SKETCHFAB Standard (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/maple-tree-68bea58fd9a549a99cfa5d1c739c97a8
Title: Maple Tree
*/

import * as THREE from "three";
import React, { useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh;
    Object_3: THREE.Mesh;
    Object_4: THREE.Mesh;
  };
  materials: {
    ["branch05.001"]: THREE.MeshStandardMaterial;
    ["mossybark02.001"]: THREE.MeshStandardMaterial;
    ["mossybark03.001"]: THREE.MeshStandardMaterial;
  };
  animations: THREE.AnimationClip[];
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export function TreeModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/maple_tree/scene.gltf"
  ) as GLTFResult;

  const [color, setColor] = useState("pink");

  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          geometry={nodes.Object_2.geometry}
          material={materials["branch05.001"]}
        />
        <mesh
          geometry={nodes.Object_3.geometry}
          material={materials["mossybark02.001"]}
        />
        <mesh
          onClick={() => setColor("red")}
          geometry={nodes.Object_4.geometry}
          material={materials["mossybark03.001"]}
          material-color={color}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/maple_tree/scene.gltf");
